{"ast":null,"code":"var _jsxFileName = \"/Users/win_thanatpong/Desktop/netcent-FindMyMines/frontend/src/components/GridEasy.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst size = 6;\nconst bombImageSrc = \"/path/to/bomb-image.png\"; // Replace with the actual path to the bomb image\n\nconst GridEasy = ({\n  grid,\n  cellClicked,\n  playerIndex\n}) => {\n  _s();\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    // Code for rendering the grid remains the same\n\n    // ...\n\n    // If it's not a bomb, add a click event listener to the tile\n    tile.addEventListener(\"click\", () => {\n      // Handle cell click event\n      if (grid[r][c] === 1) {\n        // Bomb clicked\n        // Show the bomb image when the bomb cell is clicked\n        bombImage.style.display = \"block\";\n        // Handle game over logic here\n      } else {\n        // Non-bomb cell clicked\n        // Increment score\n        setScore(score + 1);\n        // Handle other game logic here\n      }\n    });\n\n    // ...\n  }, [grid, score]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      id: \"easy-board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(GridEasy, \"6LqkIJiaorzg0taiAgz78FTgEiM=\");\n_c = GridEasy;\nexport default GridEasy;\nvar _c;\n$RefreshReg$(_c, \"GridEasy\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","size","bombImageSrc","GridEasy","grid","cellClicked","playerIndex","_s","score","setScore","tile","addEventListener","r","c","bombImage","style","display","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/win_thanatpong/Desktop/netcent-FindMyMines/frontend/src/components/GridEasy.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst size = 6;\nconst bombImageSrc = \"/path/to/bomb-image.png\"; // Replace with the actual path to the bomb image\n\nconst GridEasy = ({ grid, cellClicked, playerIndex }) => {\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    // Code for rendering the grid remains the same\n\n    // ...\n\n    // If it's not a bomb, add a click event listener to the tile\n    tile.addEventListener(\"click\", () => {\n      // Handle cell click event\n      if (grid[r][c] === 1) {\n        // Bomb clicked\n        // Show the bomb image when the bomb cell is clicked\n        bombImage.style.display = \"block\";\n        // Handle game over logic here\n      } else {\n        // Non-bomb cell clicked\n        // Increment score\n        setScore(score + 1);\n        // Handle other game logic here\n      }\n    });\n\n    // ...\n  }, [grid, score]);\n\n  return (\n    <div className=\"grid-container\">\n      <div className=\"score\">Score: {score}</div>\n      <div className=\"grid\" id=\"easy-board\">\n        {/* Grid cells are rendered here */}\n      </div>\n    </div>\n  );\n};\n\nexport default GridEasy;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAG,CAAC;AACd,MAAMC,YAAY,GAAG,yBAAyB,CAAC,CAAC;;AAEhD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd;;IAEA;;IAEA;IACAa,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;MACnC;MACA,IAAIP,IAAI,CAACQ,CAAC,CAAC,CAACC,CAAC,CAAC,KAAK,CAAC,EAAE;QACpB;QACA;QACAC,SAAS,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;QACjC;MACF,CAAC,MAAM;QACL;QACA;QACAP,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;QACnB;MACF;IACF,CAAC,CAAC;;IAEF;EACF,CAAC,EAAE,CAACJ,IAAI,EAAEI,KAAK,CAAC,CAAC;EAEjB,oBACER,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BlB,OAAA;MAAKiB,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,SAAO,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3CtB,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAACM,EAAE,EAAC;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCIJ,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}