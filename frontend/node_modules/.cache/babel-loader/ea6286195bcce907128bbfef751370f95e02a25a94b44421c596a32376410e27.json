{"ast":null,"code":"var _jsxFileName = \"/Users/win_thanatpong/Desktop/netcent-FindMyMines/frontend/src/pages/Game.js\";\nimport React from \"react\";\nimport Wait from \"../components/Wait\";\nimport Status from \"../components/Status\";\nimport io from \"socket.io-client\";\nimport qs from \"qs\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:9000/\";\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setTurn = turn => {\n      if (this.state.playerIndex === turn) {\n        this.setState({\n          turn: true\n        });\n      } else {\n        this.setState({\n          turn: false\n        });\n      }\n    };\n    this.setGame = gameState => {\n      this.setState({\n        game: gameState\n      });\n    };\n    this.gameStart = () => {\n      let room = this.state.room;\n    };\n    this.cellClicked = () => {};\n    this.state = {\n      grid: null,\n      playerIndex: null,\n      firstPlayer: null,\n      turn: true,\n      end: false,\n      room: \"\",\n      statusMessage: \"\",\n      currentPlayerScore: 0,\n      opponentPlayer: [],\n      selectedAvatar: null,\n      opponentAvatar: null,\n      streakBombs: 0,\n      waiting: false,\n      joinError: false\n    };\n    this.socketID = null;\n  }\n  componentDidMount() {\n    this.socket = io(ENDPOINT);\n    const {\n      room,\n      name,\n      difficulty,\n      playerIndex,\n      avatar\n    } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true\n    });\n    this.setState({\n      room\n    });\n    this.setState({\n      playerIndex\n    });\n    this.setState({\n      avatar\n    });\n    console.log(avatar);\n    this.socket.emit(\"newRoomJoin\", {\n      room,\n      name,\n      difficulty,\n      avatar,\n      playerIndex\n    });\n    this.socket.on(\"waiting\", () => this.setState({\n      waiting: true,\n      currentPlayerScore: 0,\n      opponentPlayer: []\n    }));\n    //gameState:revealedCells array, players:[[id1, name1], [id2, name2]], turn, \n    this.socket.on(\"starting\", ({\n      gameState,\n      players,\n      turn,\n      avatars\n    }) => {\n      this.setState({\n        waiting: false,\n        opponentAvatar: opponent\n      });\n      console.log(opponent);\n      //this.gameStart(gameState, players, turn)\n    });\n\n    this.socket.on(\"joinError\", () => this.setState({\n      joinError: true\n    }));\n    this.socket.on(\"setFirstPlayer\", ({\n      firstPlayer,\n      id\n    }) => {\n      this.setState({\n        firstPlayer: firstPlayer\n      });\n      this.socketID = id;\n    });\n    this.socket.on(\"update\", ({\n      gameState,\n      turn\n    }) => this.handleUpdate(gameState, turn));\n    this.socket.on(\"winner\", ({\n      gameState,\n      turn\n    }) => this.handleWin(gameState, turn));\n    this.socket.on(\"restart\", ({\n      gameState,\n      turn\n    }) => this.handleRestart(gameState, turn));\n  }\n  render() {\n    if (this.state.joinError) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: `/`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Wait, {\n          display: this.state.waiting,\n          room: this.state.room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Status, {\n          message: this.state.statusMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n      // }\n    }\n  }\n}\n\nexport default Game;","map":{"version":3,"names":["React","Wait","Status","io","qs","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ENDPOINT","Game","Component","constructor","props","setTurn","turn","state","playerIndex","setState","setGame","gameState","game","gameStart","room","cellClicked","grid","firstPlayer","end","statusMessage","currentPlayerScore","opponentPlayer","selectedAvatar","opponentAvatar","streakBombs","waiting","joinError","socketID","componentDidMount","socket","name","difficulty","avatar","parse","window","location","search","ignoreQueryPrefix","console","log","emit","on","players","avatars","opponent","id","handleUpdate","handleWin","handleRestart","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","display","message"],"sources":["/Users/win_thanatpong/Desktop/netcent-FindMyMines/frontend/src/pages/Game.js"],"sourcesContent":["import React from \"react\";\n\nimport Wait from \"../components/Wait\";\nimport Status from \"../components/Status\";\n\nimport io from \"socket.io-client\";\nimport qs from \"qs\";\nimport { Navigate } from \"react-router-dom\";\n\nconst ENDPOINT = \"http://localhost:9000/\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: null,\n      playerIndex: null,\n      firstPlayer: null,\n      turn: true,\n      end: false,\n      room: \"\",\n      statusMessage: \"\",\n      currentPlayerScore: 0,\n      opponentPlayer: [],\n      selectedAvatar: null,\n      opponentAvatar: null,\n      streakBombs: 0,\n      waiting: false,\n      joinError: false,\n    };\n    this.socketID = null;\n  }\n\n  componentDidMount() {\n    this.socket = io(ENDPOINT);\n    const { room, name, difficulty, playerIndex, avatar } = qs.parse(\n      window.location.search,\n      {\n        ignoreQueryPrefix: true,\n      }\n    );\n    this.setState({ room });\n    this.setState({ playerIndex });\n    this.setState({ avatar });\n    console.log(avatar);\n    this.socket.emit(\"newRoomJoin\", { room, name, difficulty, avatar, playerIndex });\n    this.socket.on(\"waiting\", () =>\n      this.setState({\n        waiting: true,\n        currentPlayerScore: 0,\n        opponentPlayer: [],\n      })\n    );\n    //gameState:revealedCells array, players:[[id1, name1], [id2, name2]], turn, \n    this.socket.on(\"starting\", ({ gameState, players, turn, avatars }) => {\n      \n      this.setState({ waiting: false, opponentAvatar: opponent });\n      console.log(opponent);\n      //this.gameStart(gameState, players, turn)\n    });\n    this.socket.on(\"joinError\", () => this.setState({ joinError: true }));\n    this.socket.on(\"setFirstPlayer\", ({ firstPlayer, id }) => {\n      this.setState({ firstPlayer: firstPlayer });\n      this.socketID = id;\n    });\n    this.socket.on(\"update\", ({ gameState, turn }) =>\n      this.handleUpdate(gameState, turn)\n    );\n    this.socket.on(\"winner\", ({ gameState, turn }) =>\n      this.handleWin(gameState, turn)\n    );\n    this.socket.on(\"restart\", ({ gameState, turn }) =>\n      this.handleRestart(gameState, turn)\n    );\n  }\n\n  setTurn = (turn) => {\n    if (this.state.playerIndex === turn) {\n      this.setState({ turn: true });\n    } else {\n      this.setState({ turn: false });\n    }\n  };\n\n  setGame = (gameState) => {\n    this.setState({ game: gameState });\n  };\n\n  gameStart = () => {\n    let room = this.state.room\n  }\n\n  cellClicked = () => {\n  }\n\n  render() {\n    if (this.state.joinError) {\n      return <Navigate to={`/`} />;\n    } else {\n      return (\n        <>\n          <Wait display={this.state.waiting} room={this.state.room} />\n          <Status message={this.state.statusMessage} />\n        </>\n      );\n      // }\n    }\n  }\n}\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}