{"ast":null,"code":"var _jsxFileName = \"/Users/win_thanatpong/Desktop/FindMyMines/frontend/src/pages/Game.js\";\nimport React from \"react\";\nimport Wait from \"../components/Wait\";\nimport Status from \"../components/Status\";\nimport io from 'socket.io-client';\nimport qs from 'qs';\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = 'http://localhost:9000/';\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setTurn = turn => {\n      if (this.state.playerIndex === turn) {\n        this.setState({\n          turn: true\n        });\n      } else {\n        this.setState({\n          turn: false\n        });\n      }\n    };\n    this.setGame = gameState => {\n      this.setState({\n        game: gameState\n      });\n    };\n    this.state = {\n      grid: null,\n      playerIndex: null,\n      firstPlayer: null,\n      turn: true,\n      end: false,\n      room: '',\n      statusMessage: '',\n      currentPlayerScore: 0,\n      opponentPlayer: [],\n      waiting: false,\n      joinError: false\n    };\n    this.socketID = null;\n  }\n  componentDidMount() {\n    this.socket = io(ENDPOINT);\n    const {\n      room,\n      name,\n      difficulty,\n      playerIndex\n    } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true\n    });\n    this.setState({\n      room\n    });\n    this.setState({\n      playerIndex\n    });\n    this.socket.emit('newRoomJoin', {\n      room,\n      name,\n      difficulty\n    });\n    this.socket.on('waiting', () => this.setState({\n      waiting: true,\n      currentPlayerScore: 0,\n      opponentPlayer: []\n    }));\n    //gameState:revealedCells array, players:[[id1, name1], [id2, name2]], turn\n    this.socket.on('starting', ({\n      gameState,\n      players,\n      turn\n    }) => {\n      this.setState({\n        waiting: false\n      });\n      //this.gameStart(gameState, players, turn)\n    });\n\n    this.socket.on('joinError', () => this.setState({\n      joinError: true\n    }));\n    this.socket.on('setFirstPlayer', ({\n      firstPlayer,\n      id\n    }) => {\n      this.setState({\n        firstPlayer: firstPlayer\n      });\n      this.socketID = id;\n    });\n    this.socket.on('update', ({\n      gameState,\n      turn\n    }) => this.handleUpdate(gameState, turn));\n    this.socket.on('winner', ({\n      gameState,\n      turn\n    }) => this.handleWin(gameState, turn));\n    this.socket.on('restart', ({\n      gameState,\n      turn\n    }) => this.handleRestart(gameState, turn));\n  }\n  render() {\n    if (this.state.joinError) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: `/`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Wait, {\n          display: this.state.waiting,\n          room: this.state.room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Status, {\n          message: this.state.statusMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n      // } \n    }\n  }\n}\n\nexport default Game;","map":{"version":3,"names":["React","Wait","Status","io","qs","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ENDPOINT","Game","Component","constructor","props","setTurn","turn","state","playerIndex","setState","setGame","gameState","game","grid","firstPlayer","end","room","statusMessage","currentPlayerScore","opponentPlayer","waiting","joinError","socketID","componentDidMount","socket","name","difficulty","parse","window","location","search","ignoreQueryPrefix","emit","on","players","id","handleUpdate","handleWin","handleRestart","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","display","message"],"sources":["/Users/win_thanatpong/Desktop/FindMyMines/frontend/src/pages/Game.js"],"sourcesContent":["import React from \"react\";\n\nimport Wait from \"../components/Wait\";\nimport Status from \"../components/Status\";\n\nimport io from 'socket.io-client';\nimport qs from 'qs';\nimport { Navigate } from \"react-router-dom\";\n\nconst ENDPOINT ='http://localhost:9000/'\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      grid: null,\n      playerIndex: null,\n      firstPlayer: null,\n      turn: true,\n      end: false,\n      room: '',\n      statusMessage: '',\n      currentPlayerScore: 0,\n      opponentPlayer: [],\n      waiting: false,\n      joinError: false\n    }\n    this.socketID = null\n  }\n\n  componentDidMount() {\n    this.socket = io(ENDPOINT)\n    const {room, name, difficulty, playerIndex} = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true\n     })\n    this.setState({room});\n    this.setState({playerIndex});\n    this.socket.emit('newRoomJoin', {room, name, difficulty});\n    this.socket.on('waiting', () => this.setState({waiting:true, currentPlayerScore:0, opponentPlayer:[]}));\n    //gameState:revealedCells array, players:[[id1, name1], [id2, name2]], turn\n    this.socket.on('starting', ({gameState, players, turn})=> {\n      this.setState({waiting:false});\n      //this.gameStart(gameState, players, turn)\n    })\n    this.socket.on('joinError', () => this.setState({joinError: true}));\n    this.socket.on('setFirstPlayer', ({firstPlayer, id}) => {\n      this.setState({firstPlayer: firstPlayer});\n      this.socketID = id;\n    })\n    this.socket.on('update', ({gameState, turn}) => this.handleUpdate(gameState, turn));\n    this.socket.on('winner', ({gameState, turn}) => this.handleWin(gameState, turn));\n    this.socket.on('restart', ({gameState, turn}) => this.handleRestart(gameState, turn));\n  }\n\n  setTurn = turn => {\n    if (this.state.playerIndex === turn){\n      this.setState({turn:true});\n    } else {\n      this.setState({turn:false});\n    }\n  }\n\n  setGame = gameState => {\n    this.setState({game:gameState})\n  }\n\n  render(){\n    if (this.state.joinError){\n      return(\n        <Navigate to={`/`} />\n      )\n    } else {\n      return (\n        <>\n          <Wait display={this.state.waiting} room={this.state.room}/>\n          <Status message={this.state.statusMessage}/>\n        </>\n      )\n    // } \n  }\n}\n}\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}