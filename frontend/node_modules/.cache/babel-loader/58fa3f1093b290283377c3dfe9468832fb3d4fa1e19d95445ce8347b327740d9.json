{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { Navigate, Link, useLocation } from \"react-router-dom\";\n\n// import InputForm from \"../components/InputForm\";\n// import Choice from \"../components/Choice\";\n// import Loading from \"../components/Loading\";\n// import Error from \"../components/Error\";\n\n// import qs from \"qs\";\n// import io from \"socket.io-client\";\n// const ENDPOINT = \"http://localhost:9000/\";\n\n// class MainMenu extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       step: 1,\n//       name: \"\",\n//       newGame: null,\n//       room: \"\",\n//       difficulty: \"\",\n//       playerIndex: 0,\n//       selectedAvatar: \"\",\n//       loading: false,\n//       serverConfirmed: false,\n//       error: false,\n//       errorMessage: \"\",\n//     };\n//   }\n\n//   componentDidMount = () => {\n//     const { selectedAvatar } = qs.parse(\n//       window.location.search,\n//       {\n//         ignoreQueryPrefix: true,\n//       }\n//     );\n//     this.setState({ selectedAvatar });\n//     this.socket = io(ENDPOINT);\n//     this.socket.on(\"newGameCreated\", ({ room, difficulty }) => {\n//       this.setState({ serverConfirmed: true, room: room });\n//     });\n//     this.socket.on(\"joinConfirmed\", ({ difficulty }) => {\n//       this.setState({\n//         serverConfirmed: true,\n//         difficulty: difficulty,\n//         playerIndex: 1,\n//       });\n//     });\n//     this.socket.on(\"errorMessage\", (message) => this.displayError(message));\n//   };\n\n//   componentWillUnmount() {\n//     this.socket.disconnect();\n//   }\n\n//   onChoice = (choice) => {\n//     const gameChoice = choice === \"new\" ? true : false;\n//     const newState = { newGame: gameChoice };\n//     this.setState(newState, () => {\n//       this.stepForward();\n//     });\n//   };\n\n//   validateNew = () => {\n//     if (this.state.newGame) {\n//       return !(this.state.name === \"\" || this.state.difficulty === \"\");\n//     } else {\n//       return (\n//         !(this.state.name === \"\") &&\n//         !(this.state.room === \"\") &&\n//         !(this.state.difficulty === \"\")\n//       );\n//     }\n//   };\n\n//   validateJoin = () => {\n//     if (this.state.newGame) {\n//       return !(this.state.name === \"\");\n//     } else {\n//       return !(this.state.name === \"\") && !(this.state.room === \"\");\n//     }\n//   };\n\n//   onSubmit = () => {\n//     this.setState({ loading: true });\n//     if (this.state.newGame && this.validateNew()) {\n//       this.socket.emit(\"newGame\", { difficulty: this.state.difficulty });\n//     } else if (this.state.newGame === false && this.validateJoin()) {\n//       console.log(this.state.room);\n//       this.socket.emit(\"joining\", { room: this.state.room });\n//     } else {\n//       setTimeout(() => this.setState({ loading: false }), 500);\n//       this.displayError(\n//         this.state.newGame\n//           ? \"Please fill out your name and select difficulty\"\n//           : \"Please fill out your name, room id, and select difficulty\"\n//       );\n//     }\n//   };\n\n//   setDifficulty = (diff) => {\n//     this.setState({ difficulty: diff });\n//   };\n\n//   stepBack = () => {\n//     this.setState({ step: this.state.step - 1 });\n//   };\n\n//   stepForward = () => {\n//     this.setState({ step: this.state.step + 1 });\n//   };\n\n//   onTyping = (e) => {\n//     const target = e.target.name;\n//     const value = e.target.value;\n//     const newState = { [target]: value };\n//     this.setState(newState);\n//   };\n\n//   displayError = (message) => {\n//     this.setState({ error: true, errorMessage: message, loading: false });\n//     setTimeout(() => {\n//       this.setState({ error: false, errorMessage: \"\" });\n//     }, 3000);\n//   };\n\n//   render() {\n//     if (this.state.serverConfirmed) {\n//       return (\n//         <Navigate\n//           to={`/game?room=${this.state.room}&name=${this.state.name}&difficulty=${this.state.difficulty}&playerIndex=${this.state.playerIndex}&avatar=${this.state.selectedAvatar}`}\n//         />\n//       );\n//     } else {\n//       switch (this.state.step) {\n//         case 1:\n//           return (\n//             <>\n//               <Choice onChoice={this.onChoice} />\n//               <Link to=\"/leaderboard\">\n//                 <button\n//                   className=\"btn btn-primary btn-lg btn-block\"\n//                   id=\"leaderboard-btn\"\n//                 >\n//                   LEADERBOARD\n//                 </button>\n//               </Link>\n//               <Link to=\"/avatar\">\n//                 <button\n//                   className=\"btn btn-primary btn-lg btn-block\"\n//                   id=\"avatar-btn\"\n//                 >\n//                   AVATAR\n//                 </button>\n//               </Link>\n//             </>\n//           );\n//         case 2:\n//           return (\n//             <>\n//               <Loading loading={this.state.loading} />\n//               <Error\n//                 display={this.state.error}\n//                 message={this.state.errorMessage}\n//               />\n//               <InputForm\n//                 stepBack={this.stepBack}\n//                 onSubmit={this.onSubmit}\n//                 onTyping={this.onTyping.bind(this)}\n//                 newGame={this.state.newGame}\n//                 name={this.state.name}\n//                 setDifficulty={this.setDifficulty}\n//                 room={this.state.room}\n//               />\n//             </>\n//           );\n//         default:\n//           return null;\n//       }\n//     }\n//   }\n// }\n\n// export default MainMenu;","map":{"version":3,"names":[],"sources":["/Users/win_thanatpong/Desktop/netcent-FindMyMines/frontend/src/pages/MainMenu.js"],"sourcesContent":["// import React, { Component } from \"react\";\n// import { Navigate, Link, useLocation } from \"react-router-dom\";\n\n// import InputForm from \"../components/InputForm\";\n// import Choice from \"../components/Choice\";\n// import Loading from \"../components/Loading\";\n// import Error from \"../components/Error\";\n\n// import qs from \"qs\";\n// import io from \"socket.io-client\";\n// const ENDPOINT = \"http://localhost:9000/\";\n\n// class MainMenu extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       step: 1,\n//       name: \"\",\n//       newGame: null,\n//       room: \"\",\n//       difficulty: \"\",\n//       playerIndex: 0,\n//       selectedAvatar: \"\",\n//       loading: false,\n//       serverConfirmed: false,\n//       error: false,\n//       errorMessage: \"\",\n//     };\n//   }\n\n//   componentDidMount = () => {\n//     const { selectedAvatar } = qs.parse(\n//       window.location.search,\n//       {\n//         ignoreQueryPrefix: true,\n//       }\n//     );\n//     this.setState({ selectedAvatar });\n//     this.socket = io(ENDPOINT);\n//     this.socket.on(\"newGameCreated\", ({ room, difficulty }) => {\n//       this.setState({ serverConfirmed: true, room: room });\n//     });\n//     this.socket.on(\"joinConfirmed\", ({ difficulty }) => {\n//       this.setState({\n//         serverConfirmed: true,\n//         difficulty: difficulty,\n//         playerIndex: 1,\n//       });\n//     });\n//     this.socket.on(\"errorMessage\", (message) => this.displayError(message));\n//   };\n\n//   componentWillUnmount() {\n//     this.socket.disconnect();\n//   }\n\n//   onChoice = (choice) => {\n//     const gameChoice = choice === \"new\" ? true : false;\n//     const newState = { newGame: gameChoice };\n//     this.setState(newState, () => {\n//       this.stepForward();\n//     });\n//   };\n\n//   validateNew = () => {\n//     if (this.state.newGame) {\n//       return !(this.state.name === \"\" || this.state.difficulty === \"\");\n//     } else {\n//       return (\n//         !(this.state.name === \"\") &&\n//         !(this.state.room === \"\") &&\n//         !(this.state.difficulty === \"\")\n//       );\n//     }\n//   };\n\n//   validateJoin = () => {\n//     if (this.state.newGame) {\n//       return !(this.state.name === \"\");\n//     } else {\n//       return !(this.state.name === \"\") && !(this.state.room === \"\");\n//     }\n//   };\n\n//   onSubmit = () => {\n//     this.setState({ loading: true });\n//     if (this.state.newGame && this.validateNew()) {\n//       this.socket.emit(\"newGame\", { difficulty: this.state.difficulty });\n//     } else if (this.state.newGame === false && this.validateJoin()) {\n//       console.log(this.state.room);\n//       this.socket.emit(\"joining\", { room: this.state.room });\n//     } else {\n//       setTimeout(() => this.setState({ loading: false }), 500);\n//       this.displayError(\n//         this.state.newGame\n//           ? \"Please fill out your name and select difficulty\"\n//           : \"Please fill out your name, room id, and select difficulty\"\n//       );\n//     }\n//   };\n\n//   setDifficulty = (diff) => {\n//     this.setState({ difficulty: diff });\n//   };\n\n//   stepBack = () => {\n//     this.setState({ step: this.state.step - 1 });\n//   };\n\n//   stepForward = () => {\n//     this.setState({ step: this.state.step + 1 });\n//   };\n\n//   onTyping = (e) => {\n//     const target = e.target.name;\n//     const value = e.target.value;\n//     const newState = { [target]: value };\n//     this.setState(newState);\n//   };\n\n//   displayError = (message) => {\n//     this.setState({ error: true, errorMessage: message, loading: false });\n//     setTimeout(() => {\n//       this.setState({ error: false, errorMessage: \"\" });\n//     }, 3000);\n//   };\n\n//   render() {\n//     if (this.state.serverConfirmed) {\n//       return (\n//         <Navigate\n//           to={`/game?room=${this.state.room}&name=${this.state.name}&difficulty=${this.state.difficulty}&playerIndex=${this.state.playerIndex}&avatar=${this.state.selectedAvatar}`}\n//         />\n//       );\n//     } else {\n//       switch (this.state.step) {\n//         case 1:\n//           return (\n//             <>\n//               <Choice onChoice={this.onChoice} />\n//               <Link to=\"/leaderboard\">\n//                 <button\n//                   className=\"btn btn-primary btn-lg btn-block\"\n//                   id=\"leaderboard-btn\"\n//                 >\n//                   LEADERBOARD\n//                 </button>\n//               </Link>\n//               <Link to=\"/avatar\">\n//                 <button\n//                   className=\"btn btn-primary btn-lg btn-block\"\n//                   id=\"avatar-btn\"\n//                 >\n//                   AVATAR\n//                 </button>\n//               </Link>\n//             </>\n//           );\n//         case 2:\n//           return (\n//             <>\n//               <Loading loading={this.state.loading} />\n//               <Error\n//                 display={this.state.error}\n//                 message={this.state.errorMessage}\n//               />\n//               <InputForm\n//                 stepBack={this.stepBack}\n//                 onSubmit={this.onSubmit}\n//                 onTyping={this.onTyping.bind(this)}\n//                 newGame={this.state.newGame}\n//                 name={this.state.name}\n//                 setDifficulty={this.setDifficulty}\n//                 room={this.state.room}\n//               />\n//             </>\n//           );\n//         default:\n//           return null;\n//       }\n//     }\n//   }\n// }\n\n// export default MainMenu;"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}